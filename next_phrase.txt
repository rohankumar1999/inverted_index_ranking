Modified pseudo code for nextPhrase to handle document boundaries:

nextPhrase(t[1],t[2], .., t[n], position)
{
   v := position
   for i in range(n):
      v := next(t[i], v)
   if v[0] = infty :
      return [[infty, infty], [infty, infty]]
   u := v
   for i in reversed(range(n-1)):
      u := prev(t[i],u)
   
   if v[0]=u[0] and v[1]-u[1] = n - 1: //we check if both v and u point to the same doc before checking the offset
      return [u, v]
   else:
      return nextPhrase(t[1],t[2], .., t[n], u)
}